# ================================
# 1. Backend Deployment
# ================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-backend
  template:
    metadata:
      labels:
        app: flask-backend
    spec:
      containers:
      - name: flask-backend-container
        # CORRECTED: Use the Artifact Registry path.
        # For the very first 'kubectl apply', you might use a public placeholder image here,
        # but for consistency with the pipeline, this is the correct path.
        image: us-central1-docker.pkg.dev/delta-sprite-466806-n8/flask-app/backend:latest
        ports:
        - containerPort: 5000
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "250m"
            memory: "256Mi"

---
# ================================
# 2. Backend Service (ClusterIP)
# ================================
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: ClusterIP
  selector:
    app: flask-backend
  ports:
  - port: 5000
    targetPort: 5000

---
# ================================
# 3. Frontend Deployment
# ================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-frontend
  template:
    metadata:
      labels:
        app: nginx-frontend
    spec:
      containers:
      - name: nginx-frontend-container
        # CORRECTED: Use the Artifact Registry path.
        image: us-central1-docker.pkg.dev/delta-sprite-466806-n8/flask-app/frontend:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "250m"
            memory: "256Mi"

---
# ================================
# 4. Frontend Service (LoadBalancer)
# ================================
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: LoadBalancer
  selector:
    app: nginx-frontend
  ports:
  - port: 80
    targetPort: 80